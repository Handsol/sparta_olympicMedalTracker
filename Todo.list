2025-01-21 (화) 기본 레이아웃 설정 및 입력 폼 구현
 1. 프로젝트 셋업 (완)
  - Vite로 리액트 프로젝트 셋업, 리액트 어플리케이션 실행

 2. 기본 레이아웃 구성
  - App.jsx에 기본 레이아웃 설정(UI 뼈대 생성)
  - 어플리케이션을 항상 가로 기준 화면 중앙에 배치
  - 백그라운드 컬러, 상단 여백 등 기본 레이아웃 추가

 3. 입력 폼 UI 구현
  - 나라 이름, 금메달, 은메달, 동메달 입력 필드 추가
  - 제출 버튼 추가 
  - 버튼 클릭 시 데이터 추가하는 onSubmit 이벤트 핸들러 설정
  - 기본 상태 관리할 useState 훅으로 초기 상태 설정
  - 제출 후 입력 필드 초기화 처리
  - onSubmit을 사용하기 위해선 Input들은 Form 안에 위치

2025-01-22 (수) 메달 집계 List 출력, CRUD 기능 구현
 1. 메달 집계 리스트 출력
  - App.jsx에 국가 별 메달 집계 표시하는 List 추가
  - 국가 리스트 데이터를 저장할 useState 추가
  - map 메서드를 사용해 리스트에 데이터 반복 출력
  - 금메달 수 기준 내림차 순 정렬(상위 국가부터) - 원래 배열 sort!

 2. CRUD 기능
  (1) Create 기능
     - 제출버튼 클릭 시 새로운 정보를 리스트에 추가, 화면 표시
  (2) Read 기능
     - 리스트에 표시된 국가 별 메달 집계 확인하는 UI 반영
  (3) Update 기능
     - 이미 추가된 국가의 메달 수를 수정하는 기능 추가
      (1) 수정하려는 국가 데이터 입력 후 업데이트 버튼 클릭 시 수정
      (2) 입력한 나라 이름을 기반으로 리스트에서 국가 찾아서 적용
  (4) Delete 기능
     - 각 나라 옆에 삭제 버튼 추가, 클릭 시 국가의 메달 집계 제거
       filter 메서드 활용, 선택 국가 제외 나머지 국가로 리스트 재구성

 3. 컴포넌트 구조 분리
   - 리스트 항목과 폼을 별도의 컴포넌트로 분리하여 코드 가독성 Up
     예 : 입력 폼 - MedalForm, 국가 별 메달 - MedalList, MedalItem

2025-01-23 (목) 도전 기능 중심 개발
 1. 입력/수정 시 처리의 적정성 검증
   (1) 중복 국가 - 리스트에 존재하는 국가는 추가 안되게 안내
   (2) 미등록 국가 - 리스트에 존재하지 않는 국가는 업데이트 안되게 안내
   ** 안내할땐 alert 또는 custom modal 로 자유롭게 안내

 2. 총 메달 수 정렬 옵션 추가
   - Day2(수)에 금메달 기준으로 내림차 순 정렬 추가
   - 메달의 총 합을 기준으로 정렬 가능하도록 기능 추가
   - 체크박스, 라디오 버튼 등 활용하여 금메달/총 메달 선택하는 UI

 3. 로컬 스토리지 활용
   - 새로고침해도 입력한 정보가 휘발되지 않도록 localStorage 사용
   - 국가와 메달 정보를 localStorage에 저장
   - 페이지가 로드 될때 데이터를 불러와 초기 상태 구성(useState의 초기값)

 4. 최종 확인 및 코드 정리
   - 작성한 모든 기능이 정상 작동하는지 테스트
   - 코드 점검 및 불필요한 코드 및 중복되는 코드 정리
   - README 작성